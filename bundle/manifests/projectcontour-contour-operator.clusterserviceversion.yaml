apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.8.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
  name: contour-operator.v0.0.1
  namespace: contour-operator
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Contour is the Schema for the contours API.
      displayName: Contour
      kind: Contour
      name: contours.operator.projectcontour.io
      version: v1alpha1
    - kind: GatewayClass
      name: gatewayclasses.networking.x-k8s.io
      version: v1alpha1
    - kind: Gateway
      name: gateways.networking.x-k8s.io
      version: v1alpha1
    - kind: HTTPProxy
      name: httpproxies.projectcontour.io
      version: v1
    - kind: HTTPRoute
      name: httproutes.networking.x-k8s.io
      version: v1alpha1
    - kind: TLSCertificateDelegation
      name: tlscertificatedelegations.projectcontour.io
      version: v1
    - kind: TLSRoute
      name: tlsroutes.networking.x-k8s.io
      version: v1alpha1
  description: Contour Operator provides a method for packaging, deploying, and managing
    Contour
  displayName: Contour Operator
  icon:
  - base64data: ""
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          - serviceaccounts
          - services
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          - ingresses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses/status
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - networking.x-k8s.io
          resources:
          - backendpolicies
          - gatewayclasses
          - gateways
          - httproutes
          - tlsroutes
          verbs:
          - get
          - list
          - update
          - watch
        - apiGroups:
          - networking.x-k8s.io
          resources:
          - backendpolicies/status
          - gatewayclasses/status
          - gateways/status
          - httproutes/status
          - tlsroutes/status
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - networking.x-k8s.io
          resources:
          - tcproutes
          - udproutes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.x-k8s.io
          resources:
          - tcproutes/status
          - udproutes/status
          verbs:
          - update
        - apiGroups:
          - operator.projectcontour.io
          resources:
          - contours
          verbs:
          - get
          - list
          - update
          - watch
        - apiGroups:
          - operator.projectcontour.io
          resources:
          - contours/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - projectcontour.io
          resources:
          - extensionservices
          - httpproxies
          - tlscertificatedelegations
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - projectcontour.io
          resources:
          - extensionservices/status
          - httpproxies/status
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: contour-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: contour-operator
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: contour-operator
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /contour-operator
                image: docker.io/projectcontour/contour-operator:main
                imagePullPolicy: Always
                name: contour-operator
                resources:
                  requests:
                    cpu: 100m
                    memory: 70Mi
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - contour
  - contour-operator
  - projectcontour
  links:
  - name: Contour Operator
    url: https://github.com/openshift/contour-operator 
  maturity: alpha
  provider:
    name: Red Hat, Inc.
  version: 0.0.1
